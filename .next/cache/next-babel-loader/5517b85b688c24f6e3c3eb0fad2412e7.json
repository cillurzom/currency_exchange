{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cilur\\\\Documents\\\\webzo\\\\currency-exchange-contest\\\\src\\\\pages\\\\[date]\\\\[base].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport Error from \"../../components/Error\";\nimport RatesTable from \"../../components/RatesTable\";\nimport Select from \"../../components/form/Select\";\n\nconst Base = () => {\n  /*\r\n   * Setting the initial state values\r\n   */\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: baseState,\n    1: setBaseState\n  } = useState(\"\");\n  const {\n    0: dateState,\n    1: setDateState\n  } = useState(\"latest\");\n  const {\n    0: rates,\n    1: setRates\n  } = useState([]);\n  /*\r\n   * Fetching data from the url\r\n   */\n\n  const router = useRouter();\n  const {\n    date,\n    base\n  } = router.query;\n  /*\r\n   * Fetching the data with our information\r\n   */\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setIsLoading(true);\n        const result = await axios.get(\"https://api.exchangeratesapi.io/\" + dateState + \"?base=\" + baseState);\n        const {\n          data\n        } = result;\n        setBaseState(data.base);\n        setDateState(data.date);\n        setRates(data.rates);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setError(\"Couldn't load data. Try again later or contact a developer if the issue persists.\");\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  if (isLoading) {\n    return __jsx(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (error) {\n    return __jsx(Error, {\n      errorMsg: \"We've encountered an error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }\n    });\n  }\n\n  const handleBaseChange = e => {\n    changeBaseAndReFetchData(e.target.value);\n  };\n\n  const changeBaseAndReFetchData = base => {\n    setBaseState(base);\n    window.loction;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"bg-light p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    handleChange: handleBaseChange,\n    base: baseState,\n    options: Object.keys(rates),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 39\n    }\n  })), __jsx(RatesTable, {\n    rates: rates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Base;","map":{"version":3,"sources":["C:/Users/cilur/Documents/webzo/currency-exchange-contest/src/pages/[date]/[base].js"],"names":["React","useEffect","useState","useRouter","axios","Loading","Error","RatesTable","Select","Base","isLoading","setIsLoading","error","setError","baseState","setBaseState","dateState","setDateState","rates","setRates","router","date","base","query","fetchData","result","get","data","handleBaseChange","e","changeBaseAndReFetchData","target","value","window","loction","Object","keys"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\r\nimport {useRouter} from \"next/router\";\r\nimport axios from \"axios\";\r\nimport Loading from \"../../components/Loading\";\r\nimport Error from \"../../components/Error\";\r\nimport RatesTable from \"../../components/RatesTable\";\r\nimport Select from \"../../components/form/Select\";\r\n\r\nconst Base = () => {\r\n    /*\r\n     * Setting the initial state values\r\n     */\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [baseState, setBaseState] = useState(\"\");\r\n    const [dateState, setDateState] = useState(\"latest\");\r\n    const [rates, setRates] = useState([]);\r\n\r\n    /*\r\n     * Fetching data from the url\r\n     */\r\n    const router = useRouter();\r\n    const {date, base} = router.query;\r\n\r\n    /*\r\n     * Fetching the data with our information\r\n     */\r\n    useEffect( () => {\r\n        async function fetchData() {\r\n            try {\r\n                setIsLoading(true);\r\n                const result = await axios.get(\"https://api.exchangeratesapi.io/\" + dateState + \"?base=\" + baseState);\r\n                const {data} = result;\r\n                setBaseState(data.base);setDateState(data.date);setRates(data.rates);setIsLoading(false);\r\n            } catch (error) {\r\n                setIsLoading(false);\r\n                setError(\"Couldn't load data. Try again later or contact a developer if the issue persists.\");\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    if(isLoading) {\r\n        return <Loading />;\r\n    }\r\n    if(error) {\r\n        return <Error errorMsg=\"We've encountered an error\" />;\r\n    }\r\n\r\n    const handleBaseChange = e => {\r\n        changeBaseAndReFetchData(e.target.value);\r\n    }\r\n    const changeBaseAndReFetchData = base => {\r\n        setBaseState(base);\r\n        window.loction\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"bg-light p-4\"><Select handleChange={handleBaseChange} base={baseState} options={Object.keys(rates)} /></div>\r\n\r\n        <RatesTable rates={rates} />\r\n        </>\r\n    )\r\n}\r\nexport default Base;"]},"metadata":{},"sourceType":"module"}