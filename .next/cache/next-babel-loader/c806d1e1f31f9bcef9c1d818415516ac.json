{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cilur\\\\Documents\\\\webzo\\\\currency-exchange-contest\\\\src\\\\components\\\\form\\\\Select.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport SelectEl from \"react-bootstrap/Select\";\n\nconst Select = ({\n  options,\n  base,\n  handleChange,\n  compare\n}) => {\n  const generateOptions = options.map((option, key) => __jsx(\"option\", {\n    key: key,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 58\n    }\n  }, option));\n  let helpText;\n\n  if (compare) {\n    helpText = __jsx(Form.Text, {\n      muted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 20\n      }\n    }, \"Compare rates against another currency\");\n  }\n\n  return __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, __jsx(InputGroup.Prepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-coins\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 38\n    }\n  }))), __jsx(SelectEl.te, {\n    name: \"base\",\n    value: base,\n    className: \"form-control\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, generateOptions), helpText));\n};\n\n_c = Select;\nexport default Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["C:/Users/cilur/Documents/webzo/currency-exchange-contest/src/components/form/Select.js"],"names":["React","InputGroup","FormGroup","Form","SelectEl","Select","options","base","handleChange","compare","generateOptions","map","option","key","helpText"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AACA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA,YAAhB;AAA8BC,EAAAA;AAA9B,CAAD,KAA4C;AACvD,QAAMC,eAAe,GAAGJ,OAAO,CAACK,GAAR,CAAY,CAACC,MAAD,EAASC,GAAT,KAAiB;AAAQ,IAAA,GAAG,EAAEA,GAAb;AAAkB,IAAA,KAAK,EAAED,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCA,MAAlC,CAA7B,CAAxB;AACA,MAAIE,QAAJ;;AACA,MAAGL,OAAH,EAAY;AACRK,IAAAA,QAAQ,GAAG,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAX;AAGH;;AACD,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD,CAAY,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiB;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,CADJ,CADJ,EAII,MAAC,QAAD,CAAU,EAAV;AAAa,IAAA,IAAI,EAAC,MAAlB;AAAyB,IAAA,KAAK,EAAEP,IAAhC;AAAsC,IAAA,SAAS,EAAC,cAAhD;AAA+D,IAAA,QAAQ,EAAEC,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,eADL,CAJJ,EAOKI,QAPL,CADJ,CADJ;AAaH,CArBD;;KAAMT,M;AAwBN,eAAeA,MAAf","sourcesContent":["import React from \"react\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormGroup from \"react-bootstrap/FormGroup\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport SelectEl from \"react-bootstrap/Select\"\r\nconst Select = ({options, base, handleChange, compare}) => {\r\n    const generateOptions = options.map((option, key) => <option key={key} value={option}>{option}</option>);\r\n    let helpText;\r\n    if(compare) {\r\n        helpText = <Form.Text muted>\r\n            Compare rates against another currency\r\n        </Form.Text>\r\n    }\r\n    return (\r\n        <FormGroup>\r\n            <InputGroup>\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text><i className=\"fas fa-coins\"></i></InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <SelectEl.te name=\"base\" value={base} className=\"form-control\" onChange={handleChange}>\r\n                    {generateOptions}\r\n                </SelectEl.te>\r\n                {helpText}\r\n            </InputGroup>\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\n\r\nexport default Select;"]},"metadata":{},"sourceType":"module"}