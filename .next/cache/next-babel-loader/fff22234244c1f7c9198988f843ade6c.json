{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Loading from \"../../components/Loading\";\nimport Error from \"../../components/Error\";\nimport RatesTable from \"../../components/RatesTable\";\nimport Select from \"../../components/form/Select\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nvar getDateString = function getDateString(date) {\n  var y = date.getFullYear();\n  var m = date.getMonth() + 1;\n  var d = date.getDate();\n  return y + \"-\" + m + \"-\" + d;\n};\n\nvar Base = function Base(props) {\n  var _useState = useState(\"EUR\"),\n      compareBase = _useState[0],\n      setCompareBase = _useState[1];\n\n  var _useState2 = useState(1),\n      baseValue = _useState2[0],\n      setBaseValue = _useState2[1];\n\n  var _useState3 = useState(0),\n      compareBaseValue = _useState3[0],\n      setCompareBaseValue = _useState3[1];\n\n  var _useState4 = useState(2),\n      compareBaseRate = _useState4[0],\n      setCompareBaseRate = _useState4[1];\n\n  var _props$data = props.data,\n      base = _props$data.base,\n      date = _props$data.date,\n      rates = _props$data.rates;\n  useEffect(function () {\n    setCompareBaseValue(rates[compareBase]);\n    setCompareBaseRate(rates[compareBase]);\n    setBaseValue(1);\n  }, [rates]);\n  var router = useRouter();\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n\n    switch (name) {\n      case \"baseValue\":\n        setBaseValue(value);\n        setCompareBaseValue(value * compareBaseRate);\n        break;\n\n      case \"compareBaseValue\":\n        setCompareBaseValue(value);\n        setBaseValue(value / compareBaseRate);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  var handleCompareBaseChange = function handleCompareBaseChange(e) {\n    setCompareBase(e.target.value);\n    setCompareBaseRate(rates[e.target.value]);\n    setCompareBaseValue(baseValue * rates[e.target.value]);\n  };\n\n  var handleBaseChange = function handleBaseChange(e) {\n    router.push(\"/\".concat(date, \"/\").concat(e.target.value));\n  };\n\n  var handleDateChange = function handleDateChange(date) {\n    router.push(\"/\".concat(getDateString(date), \"/\").concat(base));\n  };\n\n  var CustomDatePickerInput = function CustomDatePickerInput(_ref) {\n    var value = _ref.value,\n        onClick = _ref.onClick;\n    return __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: onClick\n    }, __jsx(\"i\", {\n      className: \"fas fa-calendar\"\n    }), \" \", value, console.log(value));\n  };\n\n  return __jsx(Container, {\n    className: \"bg-dark text-light p-5\",\n    style: {\n      borderTopRightRadius: \"50px\",\n      borderBottomLeftRadius: \"50px\"\n    }\n  }, __jsx(Row, {\n    className: \"mb-5\"\n  }, __jsx(Col, null, __jsx(\"h1\", null, \"Showing results for \", base, __jsx(\"div\", {\n    className: \"float-right\"\n  }, __jsx(DatePicker, {\n    selected: new Date(date),\n    customInput: __jsx(CustomDatePickerInput, null),\n    className: \"form-control\",\n    onChange: function onChange(date) {\n      return handleDateChange(date);\n    }\n  }), __jsx(Select, {\n    handleChange: handleBaseChange,\n    base: base,\n    options: Object.keys(rates)\n  }))))), __jsx(Row, {\n    className: \"bg-light p-4\",\n    style: {\n      margin: \"0 0px\"\n    }\n  }, __jsx(Col, {\n    md: \"12\"\n  }, __jsx(Select, {\n    handleChange: handleCompareBaseChange,\n    base: compareBase,\n    options: Object.keys(rates),\n    compare: true\n  })), __jsx(Col, {\n    md: \"6\"\n  }, __jsx(FormGroup, null, __jsx(InputGroup, null, __jsx(InputGroup.Append, null, __jsx(InputGroup.Text, null, base)), __jsx(\"input\", {\n    type: \"text\",\n    value: baseValue,\n    onChange: handleChange,\n    name: \"baseValue\",\n    className: \"form-control\"\n  })))), __jsx(Col, {\n    md: \"6\"\n  }, __jsx(FormGroup, null, __jsx(InputGroup, null, __jsx(InputGroup.Append, null, __jsx(InputGroup.Text, null, compareBase)), __jsx(\"input\", {\n    type: \"text\",\n    value: compareBaseValue,\n    onChange: handleChange,\n    name: \"compareBaseValue\",\n    className: \"form-control\"\n  }))))), __jsx(Row, null, __jsx(Col, null, __jsx(RatesTable, {\n    rates: rates\n  }))));\n};\n\nexport var __N_SSP = true;\nexport default Base;","map":null,"metadata":{},"sourceType":"module"}