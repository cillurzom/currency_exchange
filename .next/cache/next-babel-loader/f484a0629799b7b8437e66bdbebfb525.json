{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cilur\\\\Documents\\\\webzo\\\\currency-exchange-contest\\\\src\\\\pages\\\\[date]\\\\[base].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport Error from \"../../components/Error\";\nimport RatesTable from \"../../components/RatesTable\";\nimport Select from \"../../components/form/Select\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nconst getDateString = date => {\n  const y = date.getFullYear();\n  const m = date.getMonth() + 1;\n  const d = date.getDate();\n  return y + \"-\" + m + \"-\" + d;\n};\n\nconst Base = props => {\n  const {\n    0: compareBase,\n    1: setCompareBase\n  } = useState(\"EUR\");\n  const {\n    0: baseValue,\n    1: setBaseValue\n  } = useState(1);\n  const {\n    0: compareBaseValue,\n    1: setCompareBaseValue\n  } = useState(0);\n  const {\n    0: compareBaseRate,\n    1: setCompareBaseRate\n  } = useState(2);\n  const {\n    base,\n    date,\n    rates\n  } = props.data;\n  useEffect(() => {\n    setCompareBaseValue(rates[compareBase]);\n    setCompareBaseRate(rates[compareBase]);\n    setBaseValue(1);\n  }, [rates]);\n  const router = useRouter();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    switch (name) {\n      case \"baseValue\":\n        setBaseValue(value);\n        setCompareBaseValue(value * compareBaseRate);\n        break;\n\n      case \"compareBaseValue\":\n        setCompareBaseValue(value);\n        setBaseValue(compareBaseValue / compareBaseRate);\n        alert(compareBaseValue + \"/\" + compareBaseRate);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleCompareBaseChange = e => {\n    setCompareBase(e.target.value);\n    setCompareBaseRate(rates[e.target.value]);\n    setCompareBaseValue(baseValue * rates[e.target.value]);\n  };\n\n  const handleBaseChange = e => {\n    router.push(`/${date}/${e.target.value}`);\n  };\n\n  const handleDateChange = date => {\n    router.push(`/${getDateString(date)}/${base}`);\n  };\n\n  const CustomDatePickerInput = ({\n    value,\n    onClick\n  }) => __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), \" \", value, console.log(value));\n\n  return __jsx(Container, {\n    className: \"bg-dark text-light p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Showing results for \", base), __jsx(DatePicker, {\n    selected: new Date(date),\n    customInput: __jsx(CustomDatePickerInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 72\n      }\n    }),\n    className: \"form-control\",\n    onChange: date => handleDateChange(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }))), __jsx(Row, {\n    className: \"bg-light p-4\",\n    style: {\n      margin: \"0 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    handleChange: handleBaseChange,\n    base: base,\n    options: Object.keys(rates),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  })), __jsx(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    handleChange: handleCompareBaseChange,\n    base: compareBase,\n    options: Object.keys(rates),\n    compare: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  })), __jsx(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }\n  }, __jsx(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 27\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 31\n    }\n  }, base)), __jsx(\"input\", {\n    type: \"text\",\n    value: baseValue,\n    onChange: handleChange,\n    name: \"baseValue\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 27\n    }\n  })))), __jsx(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, __jsx(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, compareBase)), __jsx(\"input\", {\n    type: \"text\",\n    value: compareBaseValue,\n    onChange: handleChange,\n    name: \"compareBaseValue\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, __jsx(RatesTable, {\n    rates: rates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport async function getServerSideProps(context) {\n  const {\n    date,\n    base\n  } = context.params;\n  const result = await axios.get(`https://api.exchangeratesapi.io/${date}?base=${base}`);\n  const data = await result.data;\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default Base;","map":{"version":3,"sources":["C:/Users/cilur/Documents/webzo/currency-exchange-contest/src/pages/[date]/[base].js"],"names":["React","useEffect","useState","useRouter","axios","Loading","Error","RatesTable","Select","Col","Row","Container","DatePicker","FormGroup","InputGroup","getDateString","date","y","getFullYear","m","getMonth","d","getDate","Base","props","compareBase","setCompareBase","baseValue","setBaseValue","compareBaseValue","setCompareBaseValue","compareBaseRate","setCompareBaseRate","base","rates","data","router","handleChange","e","name","value","target","alert","handleCompareBaseChange","handleBaseChange","push","handleDateChange","CustomDatePickerInput","onClick","console","log","Date","margin","Object","keys","getServerSideProps","context","params","result","get"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\r\nimport {useRouter} from \"next/router\";\r\nimport axios from \"axios\";\r\nimport Loading from \"../../components/Loading\";\r\nimport Error from \"../../components/Error\";\r\nimport RatesTable from \"../../components/RatesTable\";\r\nimport Select from \"../../components/form/Select\";\r\nimport {Col, Row, Container} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport FormGroup from \"react-bootstrap/FormGroup\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\n\r\nconst getDateString = date => {\r\n    const y = date.getFullYear();\r\n    const m = date.getMonth() + 1;\r\n    const d = date.getDate();\r\n    return y + \"-\" + m + \"-\" + d;\r\n}\r\n\r\nconst Base = (props) => {\r\n    const [compareBase, setCompareBase] = useState(\"EUR\");\r\n    const [baseValue, setBaseValue] = useState(1);\r\n    const [compareBaseValue, setCompareBaseValue] = useState(0);\r\n    const [compareBaseRate, setCompareBaseRate] = useState(2);\r\n    const {base, date, rates} = props.data;\r\n\r\n\r\n    useEffect(() => {\r\n        setCompareBaseValue(rates[compareBase])\r\n        setCompareBaseRate(rates[compareBase])\r\n        setBaseValue(1);\r\n    },[rates]);\r\n\r\n\r\n    const router = useRouter();\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        switch(name) {\r\n            case \"baseValue\":\r\n                setBaseValue(value);\r\n                setCompareBaseValue(value * compareBaseRate);\r\n                break\r\n            case \"compareBaseValue\":\r\n                setCompareBaseValue(value);\r\n                setBaseValue(compareBaseValue / compareBaseRate);\r\n\r\n                alert(compareBaseValue + \"/\" + compareBaseRate)\r\n                break\r\n            default: return;\r\n        }\r\n    }\r\n\r\n    const handleCompareBaseChange = e => {\r\n        setCompareBase(e.target.value);\r\n        setCompareBaseRate(rates[e.target.value])\r\n        setCompareBaseValue(baseValue * rates[e.target.value])\r\n    }\r\n\r\n    const handleBaseChange = e => {\r\n        router.push(`/${date}/${e.target.value}`)\r\n    }\r\n\r\n    const handleDateChange = date => {\r\n\r\n        router.push(`/${getDateString(date)}/${base}`)\r\n    }\r\n\r\n    const CustomDatePickerInput = ({ value, onClick }) => (\r\n        <button className=\"btn btn-primary\" onClick={onClick}>\r\n            <i className=\"fas fa-calendar\"></i> {value}{console.log(value)}\r\n        </button>\r\n    );\r\n\r\n    return (\r\n        <Container className={\"bg-dark text-light p-5\"}>\r\n            <Row className={\"mb-5\"}>\r\n                <Col>\r\n                    <h1>Showing results for {base}</h1>\r\n                    <DatePicker selected={new Date(date)} customInput={<CustomDatePickerInput />} className=\"form-control\" onChange={date => handleDateChange(date)} />\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-light p-4\" style={{ margin: \"0 0px\" }}>\r\n                <Col md=\"6\">\r\n                  <Select handleChange={handleBaseChange} base={base} options={Object.keys(rates)} />\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <Select handleChange={handleCompareBaseChange} base={compareBase} options={Object.keys(rates)} compare />\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <FormGroup>\r\n                      <InputGroup>\r\n                          <InputGroup.Append>\r\n                              <InputGroup.Text>\r\n                                  {base}\r\n                              </InputGroup.Text>\r\n                          </InputGroup.Append>\r\n                          <input type=\"text\" value={baseValue} onChange={handleChange} name=\"baseValue\" className={\"form-control\"} />\r\n                      </InputGroup>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                        <InputGroup>\r\n                            <InputGroup.Append>\r\n                                <InputGroup.Text>\r\n                                    {compareBase}\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Append>\r\n                            <input type=\"text\" value={compareBaseValue} onChange={handleChange} name=\"compareBaseValue\" className={\"form-control\"} />\r\n                        </InputGroup>\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <RatesTable rates={rates} />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n    const {date, base} = context.params;\r\n    const result = await axios.get(`https://api.exchangeratesapi.io/${date}?base=${base}`)\r\n    const data = await result.data;\r\n    return {\r\n        props: {data},\r\n    }\r\n}\r\nexport default Base;"]},"metadata":{},"sourceType":"module"}