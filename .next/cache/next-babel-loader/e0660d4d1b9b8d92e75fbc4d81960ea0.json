{"ast":null,"code":"import * as actions from \"./constants\";\nimport axios from \"axios\";\n\nconst loadCurrencyRatesInit = () => ({\n  type: actions.LOAD_CURRENCY_RATES_INIT\n});\n\nconst loadCurrencyRatesSuccess = data => ({\n  type: actions.LOAD_CURRENCY_RATES_SUCCESS,\n  data\n});\n\nconst loadCurrencyRatesError = error => ({\n  type: actions.LOAD_CURRENCY_RATES_ERROR,\n  error\n});\n\nexport const loadCurrencyRates = () => {\n  return dispatch => {\n    dispatch(loadCurrencyRatesInit());\n    axios.get(\"https://api.exchangeratesapi.io/latest?base=USD\").then(response => dispatch(loadCurrencyRatesSuccess(response.data))).catch(error => dispatch(loadCurrencyRatesError(\"Couldn't load rates.\")));\n  };\n};","map":{"version":3,"sources":["C:/Users/cilur/Documents/webzo/currency-exchange-contest/src/store/actions/actions.js"],"names":["actions","axios","loadCurrencyRatesInit","type","LOAD_CURRENCY_RATES_INIT","loadCurrencyRatesSuccess","data","LOAD_CURRENCY_RATES_SUCCESS","loadCurrencyRatesError","error","LOAD_CURRENCY_RATES_ERROR","loadCurrencyRates","dispatch","get","then","response","catch"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAqB,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAEH,OAAO,CAACI;AAAhB,CAAP,CAA9B;;AACA,MAAMC,wBAAwB,GAAGC,IAAI,KAAK;AAAEH,EAAAA,IAAI,EAAEH,OAAO,CAACO,2BAAhB;AAA6CD,EAAAA;AAA7C,CAAL,CAArC;;AACA,MAAME,sBAAsB,GAAGC,KAAK,KAAK;AAAEN,EAAAA,IAAI,EAAEH,OAAO,CAACU,yBAAhB;AAA2CD,EAAAA;AAA3C,CAAL,CAApC;;AAEA,OAAO,MAAME,iBAAiB,GAAG,MAAM;AACnC,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AAEAD,IAAAA,KAAK,CAACY,GAAN,CAAU,iDAAV,EACKC,IADL,CACUC,QAAQ,IAAIH,QAAQ,CAACP,wBAAwB,CAACU,QAAQ,CAACT,IAAV,CAAzB,CAD9B,EAEKU,KAFL,CAEWP,KAAK,IAAIG,QAAQ,CAACJ,sBAAsB,CAAC,sBAAD,CAAvB,CAF5B;AAIH,GAPD;AAQH,CATM","sourcesContent":["import * as actions from \"./constants\";\r\nimport axios from \"axios\";\r\n\r\nconst loadCurrencyRatesInit = () => ({ type: actions.LOAD_CURRENCY_RATES_INIT })\r\nconst loadCurrencyRatesSuccess = data => ({ type: actions.LOAD_CURRENCY_RATES_SUCCESS, data })\r\nconst loadCurrencyRatesError = error => ({ type: actions.LOAD_CURRENCY_RATES_ERROR, error })\r\n\r\nexport const loadCurrencyRates = () => {\r\n    return dispatch => {\r\n        dispatch(loadCurrencyRatesInit());\r\n\r\n        axios.get(\"https://api.exchangeratesapi.io/latest?base=USD\")\r\n            .then(response => dispatch(loadCurrencyRatesSuccess(response.data)))\r\n            .catch(error => dispatch(loadCurrencyRatesError(\"Couldn't load rates.\")))\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}