{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cilur\\\\Documents\\\\webzo\\\\currency-exchange-contest\\\\src\\\\pages\\\\[date]\\\\[base].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Loading from \"../../components/Loading\";\nimport Error from \"../../components/Error\";\nimport RatesTable from \"../../components/RatesTable\";\nimport Select from \"../../components/form/Select\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nconst getDateString = date => {\n  const y = date.getFullYear();\n  const m = date.getMonth() + 1;\n  const d = date.getDate();\n  return y + \"-\" + m + \"-\" + d;\n};\n\nconst Base = props => {\n  const router = useRouter();\n  if (router.isFallback) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 34\n    }\n  });\n  const {\n    base,\n    date,\n    rates\n  } = props.data;\n\n  const handleBaseChange = e => {\n    router.push(`/${date}/${e.target.value}`);\n  };\n\n  const handleDateChange = date => {\n    router.push(`/${getDateString(date)}/${base}`);\n  };\n\n  const CustomDatePickerInput = ({\n    value,\n    onClick\n  }) => __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), \" \", value);\n\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Showing results for \", base), __jsx(DatePicker, {\n    selected: new Date(date),\n    customInput: __jsx(CustomDatePickerInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 72\n      }\n    }),\n    className: \"form-control\",\n    onChange: date => handleDateChange(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }))), __jsx(Row, {\n    className: \"bg-light p-4\",\n    style: {\n      margin: \"0 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    handleChange: handleBaseChange,\n    base: base,\n    options: Object.keys(rates),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, __jsx(RatesTable, {\n    rates: rates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport async function getStaticPaths() {\n  return {\n    paths: [{\n      params: {\n        base: \"EUR\",\n        date: 'latest'\n      }\n    }, {\n      params: {\n        base: \"EUR\",\n        date: getDateString(new Date())\n      }\n    }],\n    fallback: true\n  };\n}\nexport async function getStaticProps(context) {\n  const {\n    date,\n    base\n  } = context.params;\n  const result = await axios.get(`https://api.exchangeratesapi.io/${date}?base=${base}`);\n  const data = await result.data;\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default Base;","map":{"version":3,"sources":["C:/Users/cilur/Documents/webzo/currency-exchange-contest/src/pages/[date]/[base].js"],"names":["React","useEffect","useState","useRouter","axios","Loading","Error","RatesTable","Select","Col","Row","Container","DatePicker","FormGroup","InputGroup","getDateString","date","y","getFullYear","m","getMonth","d","getDate","Base","props","router","isFallback","base","rates","data","handleBaseChange","e","push","target","value","handleDateChange","CustomDatePickerInput","onClick","Date","margin","Object","keys","getStaticPaths","paths","params","fallback","getStaticProps","context","result","get"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\r\nimport {useRouter} from \"next/router\";\r\nimport axios from \"axios\";\r\nimport Loading from \"../../components/Loading\";\r\nimport Error from \"../../components/Error\";\r\nimport RatesTable from \"../../components/RatesTable\";\r\nimport Select from \"../../components/form/Select\";\r\nimport {Col, Row, Container} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport FormGroup from \"react-bootstrap/FormGroup\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\n\r\nconst getDateString = date => {\r\n    const y = date.getFullYear();\r\n    const m = date.getMonth() + 1;\r\n    const d = date.getDate();\r\n    return y + \"-\" + m + \"-\" + d;\r\n}\r\n\r\nconst Base = (props) => {\r\n    const router = useRouter();\r\n    if(router.isFallback) return <Loading />;\r\n\r\n    const {base, date, rates} = props.data;\r\n\r\n\r\n\r\n    const handleBaseChange = e => {\r\n        router.push(`/${date}/${e.target.value}`)\r\n    }\r\n\r\n    const handleDateChange = date => {\r\n\r\n        router.push(`/${getDateString(date)}/${base}`)\r\n    }\r\n\r\n    const CustomDatePickerInput = ({ value, onClick }) => (\r\n        <button className=\"btn btn-primary\" onClick={onClick}>\r\n            <i className=\"fas fa-calendar\"></i> {value}\r\n        </button>\r\n    );\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h1>Showing results for {base}</h1>\r\n                    <DatePicker selected={new Date(date)} customInput={<CustomDatePickerInput />} className=\"form-control\" onChange={date => handleDateChange(date)} />\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-light p-4\" style={{ margin: \"0 0px\" }}>\r\n                <Col>\r\n                  <Select handleChange={handleBaseChange} base={base} options={Object.keys(rates)} />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <RatesTable rates={rates} />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    return {\r\n        paths: [\r\n            { params: { base: \"EUR\", date: 'latest',  } },\r\n            { params: { base: \"EUR\", date: getDateString(new Date()),  } },\r\n        ],\r\n        fallback: true\r\n    }\r\n}\r\n\r\nexport async function getStaticProps (context) {\r\n    const {date, base} = context.params;\r\n    const result = await axios.get(`https://api.exchangeratesapi.io/${date}?base=${base}`)\r\n    const data = await result.data;\r\n    return {\r\n        props: {data},\r\n    }\r\n}\r\nexport default Base;"]},"metadata":{},"sourceType":"module"}